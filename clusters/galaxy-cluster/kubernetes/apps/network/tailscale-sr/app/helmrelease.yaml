---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: tailscale-sr
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      tailscale-sr:
        serviceAccount:
          identifier: tailscale-sr
        annotations:
          reloader.stakater.com/auto: "true"
        pod:
          annotations:
            k8s.v1.cni.cncf.io/networks: network/multus-lan-1
          securityContext:
            fsGroup: 568
        type: deployment
        replicas: 1
        initContainers:

          init-route:
            image:
              repository: alpine
              tag: 3.22.1
            command:
              - /bin/sh
              - -c
              - |
                ip route add 10.21.0.0/16 dev net1 && ip route add 10.11.0.0/16 dev net1 && ip route add 192.168.31.0/24 dev net1
            securityContext:
              runAsUser: 0
              runAsNonRoot: false
              capabilities:
                add:
                  - NET_ADMIN
        containers:
          app:
            env:
              NO_AUTOUPDATE: true
              PORT: &tailnetPort 45387
              TS_DEBUG_MTU: 1420
              TS_HOSTNAME: "tailscale-galaxy"
              TS_KUBE_SECRET: "tailscale-state"
              TS_ROUTES: "192.168.31.0/24,10.21.0.0/16"
              TS_TAILSCALED_EXTRA_ARGS: --debug=0.0.0.0:9001
              TS_SNAT_SUBNET_ROUTES: false
              TS_USERSPACE: false
              TZ: "${SECRET_TZ}"
              POD_NAME:
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.name
              POD_UID:
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.uid
            envFrom:
              - secretRef:
                  name: tailscale-sr-secrets
            image:
              repository: ghcr.io/tailscale/tailscale
              tag: v1.88.2@sha256:9d66a1c8922e174cd346c2776c7c6f4450589543d988ae1bb9cefd8de58fd6c2
            resources:
              limits:
                squat.ai/tun: "1"
                cpu: 1
                memory: 420Mi
              requests:
                cpu: 50m
                memory: 250Mi
            securityContext:
              fsGroup: 568
              runAsGroup: 568
              runAsNonRoot: true
              runAsUser: 568
              sysctls:
                - name: net.ipv4.ip_forward
                  value: "1"
                - name: net.ipv6.conf.all.forwarding
                  value: "1"
              allowPrivilegeEscalation: false
              capabilities:
                add:
                  - NET_RAW
                  - NET_ADMIN
                drop:
                  - ALL
              readOnlyRootFilesystem: true
    
    serviceAccount:
      tailscale-sr:
        enabled: true

    rbac:
      roles:
        tailscale-sr:
          enabled: true
          type: Role
          rules:
            - apiGroups: [""] # "" indicates the core API group
              resources: ["secrets"]
              # Create can not be restricted to a resource name.
              verbs: ["create"]
            - apiGroups: [""] # "" indicates the core API group
              resourceNames: ["tailscale-state"]
              resources: ["secrets"]
              verbs: ["get", "update", "patch"]
            - apiGroups: [""] # "" indicates the core API group
              resources: ["events"]
              verbs: ["get", "create", "patch"]
      bindings:
        tailscale-sr:
          enabled: true
          type: RoleBinding
          subjects:
            - identifier: tailscale-sr
          roleRef:
            identifier: tailscale-sr

    persistence:
      tmpfs:
        advancedMounts:
          tailscale-sr:
            app:
              - path: /.cache
                subPath: cache
              - path: /tmp
                subPath: tmp
              - path: /var/run
                subPath: run
        enabled: true
        type: emptyDir
      